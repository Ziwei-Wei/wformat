name: Build Visual Studio Extension

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Override version (e.g. 1.2.3)."
        required: true

permissions:
  contents: read

env:
  NODE_VERSION: "20"
  EXT_BASE: wformat
  VSIX_FILE: WFormatVSIX.vsix

jobs:
  build-binaries:
    name: Build Binary (${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2025
            tag: win-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment (composite action)
        uses: ./.github/actions/setup-action
        
      - name: Prep version (install tooling & set version)
        run: |
          python -m pip install --upgrade pip toml
          python scripts/set_version.py "${{ github.event.inputs.version }}"
          echo "Version set to ${{ github.event.inputs.version }}"

      - name: CMake Build
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          # Re-initialize MSVC developer environment so Ninja build sees correct INCLUDE/LIB (configure step ran in a different shell)
          $vswhere = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
          if (-not (Test-Path $vswhere)) { throw "vswhere.exe not found at $vswhere" }
          $vsroot = & $vswhere -latest -property installationPath
          if (-not $vsroot) { throw "Unable to locate Visual Studio installation" }
          $vcvars = Join-Path $vsroot 'VC\Auxiliary\Build\vcvars64.bat'
          if (-not (Test-Path $vcvars)) { throw "vcvars64.bat not found at $vcvars" }

          $buildCmd = 'cmake --build build --parallel --config Debug --target pyinstaller_bundle_for_vs'
          # Use cmd to run the batch file and then invoke the build
          $cmdLine = '"' + $vcvars + '" && ' + $buildCmd
          Write-Host "Invoking MSVC environment + build via: $cmdLine"
          cmd /c $cmdLine
          if ($LASTEXITCODE -ne 0) { throw "CMake build failed with exit code $LASTEXITCODE" }

      - name: CMake Build
        if: runner.os != 'Windows'
        shell: bash
        run: cmake --build build --parallel --config Debug --target pyinstaller_bundle_for_vs

      - name: Rename platform folder (append platform tag)
        shell: bash
        run: |
          mkdir -p extensions/vs/dist/${{ matrix.tag }}
          mv extensions/vs/dist/$EXT_BASE extensions/vs/dist/${{ matrix.tag }}/$EXT_BASE

      - name: Build VSIX
        shell: pwsh
        run: ./scripts/build-vsix.ps1 -Version ${{ github.event.inputs.version }}

      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: vs-vsix@${{ github.event.inputs.version }}
          path: ${{ env.VSIX_FILE }}
          if-no-files-found: error
