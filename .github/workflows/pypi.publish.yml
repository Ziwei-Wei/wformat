name: Build & Publish to (Test)PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      target:
        description: "Where to publish"
        type: choice
        required: true
        options: [test-pypi, pypi]
        default: test-pypi

jobs:
  build:
    name: Build (${{ matrix.label }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            label: windows-x64
          - os: windows-11-arm
            label: windows-arm64
          - os: macos-15
            label: macos-arm64
          - os: ubuntu-24.04
            label: ubuntu-24-x64
          - os: ubuntu-24.04-arm
            label: ubuntu-24-arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Ninja (all OS)
        uses: seanmiddleditch/gha-setup-ninja@v4

      - name: Set up MSVC env (Windows only)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: CMake Configure (Release)
        run: >
          cmake -S . -B build
          -G Ninja
          -DCMAKE_BUILD_TYPE=Release

      - name: CMake Build (ALL)
        run: cmake --build build --parallel

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build distributions (Linux -> sdist+wheel; others -> wheel)
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            python -m build              # sdist + wheel
          else
            python -m build --wheel      # wheel only
          fi

      - name: Upload dist/ as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ runner.os }}
          path: dist/*

  publish-test-pypi:
    name: Publish to TestPyPI
    needs: build
    if: >
      github.event_name == 'workflow_dispatch' &&
      inputs.target == 'test-pypi'
    runs-on: ubuntu-latest
    steps:
      - name: Download all built artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          path: dist
          merge-multiple: true

      - name: Publish (TestPyPI)
        uses: pypa/gh-action-pypi-publish@v1.10.1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

      - name: Smoke test install (TestPyPI)
        run: |
          python -m pip install --upgrade pip
          python -m pip install --index-url https://test.pypi.org/simple --extra-index-url https://pypi.org/simple rd-format
          rd-format -h || true

  publish-pypi:
    name: Publish to PyPI
    needs: build
    if: >
      (github.event_name == 'release' && github.event.action == 'published') ||
      (github.event_name == 'workflow_dispatch' && inputs.target == 'pypi')
    runs-on: ubuntu-latest
    environment: pypi
    steps:
      - name: Download all built artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          path: dist
          merge-multiple: true

      - name: Publish (PyPI)
        uses: pypa/gh-action-pypi-publish@v1.10.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
